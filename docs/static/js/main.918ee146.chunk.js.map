{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GridItem.js","components/Grid.js","hooks/useFetch.js","App.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","className","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GridItem","src","alt","Grid","imgs","loading","state","setState","useEffect","then","useFetch","App","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAKlB,SACI,sBAAKO,UAAU,gBAAf,UACA,uBACIC,KAAK,OACLC,MAAQV,EACRW,SAlBc,SAACR,GACvBF,EAAcE,EAAES,OAAOF,UAmBnB,mBAAGF,UAAU,sB,+BC5BZK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAGFC,EAAOD,EAAKE,KAAI,SAACC,GACrB,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAVlB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAW,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAChC,OAEI,sBAAKR,UAAU,OAAf,UACE,qBAAKA,UAAU,QAAf,SACE,qBAAKsB,IAAKd,EAAKe,IAAKL,MAEtB,qBAAKlB,UAAU,UAAf,SACE,qBAAKA,UAAU,cAAf,SACGkB,UCPAM,EAAO,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SACvB,ECDwB,SAACA,GAErB,MAA0Bf,mBAAS,CAAEkC,KAAK,GAAIC,SAAS,IAAvD,mBAAOC,EAAP,KAAcC,EAAd,KAWH,OATGC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAL,GAAI,OAAGG,EAAS,CAClBH,KAAKA,EACLC,SAAS,SAGd,CAACpB,IAEJqB,EDZgBI,CAASzB,GAA1BmB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,QACX,OACE,qCACI,6BAAKpB,IACJoB,GAAW,wCACZ,qBAAK1B,UAAU,gBAAf,SACKyB,EAAKV,KAAI,SAAAC,GAAG,OAAI,cAAC,EAAD,eAA2BA,GAAZA,EAAIC,aEWjCe,EAlBH,WAEV,MAAoCzC,mBAAS,CAAC,QAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAGA,OACE,qCACE,oBAAIU,UAAU,YAAd,wBACA,cAAC,EAAD,CAAaV,cAAeA,IAC5B,qBAAKU,UAAU,eAEZiC,EAAWlB,KAAI,SAACT,GAAD,OACd,cAAC,EAAD,CAAqBA,SAAUA,GAApBA,U,MCTrB4B,IAASC,OACP,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.918ee146.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue('');            \r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className='ui icon input'>\r\n            <input \r\n                type='text'\r\n                value={ inputValue }\r\n                onChange={handleInputChange}\r\n            ></input>\r\n            <i className=\"search icon\"></i>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=20&api_key=C3IA8UEyUYY4FGLwJ3A8l240R7WeiEtf`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n\r\n    const gifs = data.map((img) => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images.downsized_medium.url,\r\n      };\r\n    });\r\n    return gifs;\r\n};","import React from 'react';\r\n\r\nexport const GridItem = ({ title, url }) => {\r\n  return (\r\n\r\n      <div className=\"card\">\r\n        <div className=\"image\">\r\n          <img src={url} alt={title} />\r\n        </div>\r\n        <div className=\"content\">\r\n          <div className=\"description\">\r\n            {title}\r\n          </div>\r\n        </div>\r\n      </div>\r\n  );\r\n};\r\n","import { useFetch } from '../hooks/useFetch';\r\n\r\nimport { GridItem } from './GridItem';\r\n\r\nexport const Grid = ({ category }) => {\r\nconst {imgs, loading} = useFetch(category);\r\n  return (\r\n    <>\r\n        <h3>{category}</h3>\r\n        {loading && <p>Loading</p>}\r\n        <div className='ui link cards'>\r\n            {imgs.map(img => <GridItem key={img.id} {...img} />)}\r\n        </div>\r\n    </>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetch = (category) => {\r\n\r\n    const [state, setState] = useState({ imgs:[] ,loading: true });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs=> setState({\r\n                imgs:imgs,\r\n                loading: false\r\n            }\r\n            ))\r\n        }, [category]);\r\n\r\n return state; // {imgs:[], loading: true }\r\n\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { Grid } from './components/Grid';\r\n\r\nconst App = () => {\r\n\r\n  const [categories, setCategories] = useState(['Cat']);\r\n\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"ui header\">Gif expert</h2>\r\n      <AddCategory setCategories={setCategories}></AddCategory>\r\n      <div className='ui divider'></div>\r\n\r\n        {categories.map((category) => \r\n          <Grid key={category} category={category} />\r\n        )}\r\n    </>\r\n  );\r\n}; \r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//own\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <App />, document.getElementById('root')\n);\n"],"sourceRoot":""}